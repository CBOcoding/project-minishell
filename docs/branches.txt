🧾 Tabella dei comandi Git essenziali (Branch workflow)

Azione	Comando	Descrizione

🔍 Vedi le branch locali	git branch	Elenca le branch che hai sul tuo computer
🌐 Vedi branch remote	git branch -r	Elenca le branch su GitHub
🌱 Crea e passa a una nuova branch	git checkout -b nome-branch	Crea una branch partendo dalla corrente
🔄 Passa a una branch esistente	git checkout nome-branch	Cambia branch e aggiorna i file
⬆️ Invia branch su GitHub	git push origin nome-branch	Pubblica la branch remota
⬇️ Scarica branch remota	git fetch origin + git checkout nome-branch	Prendi la branch e passa ad essa
📥 Aggiorna branch locale con quella remota	git pull origin nome-branch	Prende le ultime modifiche da GitHub
🔁 Unisci una branch nella tua	git merge nome-branch	Unisce i commit di un’altra branch nella corrente
🔃 Rebase su main	git rebase main	Ricostruisce la storia come se avessi iniziato da main
💥 Risolvi conflitti	(manuale) + git add . + git rebase --continue	Durante un rebase/merge se ci sono conflitti
🧹 Elimina branch locale	git branch -d nome-branch	Rimuove una branch dal tuo PC
🧽 Elimina branch remota	git push origin --delete nome-branch	Rimuove una branch da GitHub



Step pratici per usare i Branch
🔹🔹 Creare una branch
git checkout -b nome-branch

Esempio:
git checkout -b login-feature

🔹 Lavorare su quella branch
Fai le modifiche ➜ salvale con:
git add .
git commit -m "Messaggio chiaro su cosa hai fatto"

Poi inviala su GitHub:
git push origin nome-branch

🔹 Creare una Pull Request
Vai su GitHub ➜ repository ➜ vedrai un pulsante "Compare & pull request".
Cliccalo ➜ scrivi una descrizione ➜ clicca Create pull request.
Il collaboratore può controllare il codice, lasciare commenti, e poi fare merge.

🔹🔹Se la branch giá esiste:
Recupera le branch remote:
git fetch origin

Passa alla branch:
git checkout feature/login-form

Fai le modifiche ➜ salva ➜ fai push:
git add .
git commit -m "continua lavoro login form"
git push origin feature/login-form

🔹🔹Se vuoi lavorare da entrambe le macchine a turno
Ogni volta che cambi dispositivo, ti consiglio:
git checkout feature/login-form
git pull origin feature/login-form
Così sincronizzi l’ultima versione della branch prima di iniziare.

🔹🔹 Tenere la propria branch aggiornata
Mentre lavori, il ramo main può cambiare. Per stare aggiornato:
git checkout main
git pull origin main
git checkout nome-branch
git merge main

Così prendi gli aggiornamenti e risolvi eventuali conflitti prima di fare la pull request.

Schema-riepilogo
Azione									Comando
Vedi tutte le branch remote				git branch -r
Scarica branch da GitHub				git fetch origin
Passa a branch esistente				git checkout nome-branch
Crea nuova branch						git checkout -b nome-branch
Invia la tua branch a GitHub			git push origin nome-branch
Sincronizza branch prima di lavorare	git pull origin nome-branch
